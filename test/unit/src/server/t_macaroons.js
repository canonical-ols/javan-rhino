import expect from 'expect';
import { extractCaveatId, formatMacaroonAuthHeader } from '../../../../src/server/macaroons';

// TODO fixtures
const macaroon = 'MDAzMWxvY2F0aW9uIG15YXBwcy5kZXZlbG9wZXIuc3RhZ2luZy51YnVudHUuY29tCjAwMTZpZGVudGlmaWVyIE15QXBwcwowMDUzY2lkIG15YXBwcy5kZXZlbG9wZXIuc3RhZ2luZy51YnVudHUuY29tfHZhbGlkX3NpbmNlfDIwMTYtMDktMDZUMTI6MzM6NDUuMjg3MTAxCjAyZDFjaWQgeyJzZWNyZXQiOiAiYkFxWnE0V2grYnJZSDN0NFh2WE04b0xvMkJaTk9EaFMwd3Z4emhHT3hGcllwYkN1UUtvdkcwN1NPSHFSaUdaRzBjVEFvUmtqdnNmVE83U0lVUnhWelFTbndDeTFJTWozYllwanlnY1Zkc0Z0NXFwSTRDSDlpbWFLblNjUlE3Mk1xLzZGWjhJQ21sR296bFFaZFFjOXlBOWVzNkRWUzQ4ZFhmMSt4OTV1U0tQb3VyWTVJUWNyY0JtRlJGVm9iaTNudWgxalNRQVJHcTcxWFdINTUxeDFGbUlEVmY3SitGTkR4c1ZuY1M5WWtLVmtWeCt0c0w3UGhYQTV3SkJBeGtFT0xGdWtxTGRkVSszUkRMTXhaQVpNdjFRSklKS21UMTJWSGJZWWpWSmpHbWNveHJnS00wSnRHUU9MTk1rUHcvbEhLQUtRNDdiV1JIUXFaMzJjaEU5eWRMb2JkT1BPSVRZcXZFMVgwVHBCWkRuKzN2OUFwMnBOV3Z5Sm12MUVhMGtZWmh2OGhIeTExUmpKZGNRM1hXRDdIcWdQK0hHemNBVXl3T3M5OXVXQzdKeXpjQk02THlweFh2Um1jbHhlY05xNDgzcDRQYlV0MUVxRHlyOXRUU3pjYkJ3MXZkbk5UOGh2WVh6VjMvUkFUOXJFVTg3cVo4NzNpd2lEMEdGN3RvcDJuVlNUaGpleldBS0xsdDkvYkFSUDJmSytuOG5rRGYzTVBKVzhmVk12Q05tTkhCTGRvWkNNcFExSVFrSHl2MGtnYXN6WHFuOERUdXNpR1QrdDBkaWFQdloyOS9UWmxqZk9KUFVLbEJNK0tjKzliczhWTk1OblFXS2d4emdIUEh3NnVHZThDZExGY2w1aHhSQXF5UzBHWDlWRkRvbjhwU0VBWDgrNjJ2NTBQZFE9IiwgInZlcnNpb24iOiAxfQowMDUxdmlkIKBU5z7NqVZ_7U2yVTBnEbE8dd40gT4tga06OTQADdXdBH886TIizWOMpfq5EgOOLrLDOnQKVmtcW57D356WXHhJYdKxRSAT3QowMDIwY2wgbG9naW4uc3RhZ2luZy51YnVudHUuY29tCjAwNDNjaWQgbXlhcHBzLmRldmVsb3Blci5zdGFnaW5nLnVidW50dS5jb218YWNsfFsicGFja2FnZV9hY2Nlc3MiXQowMDJmc2lnbmF0dXJlIDF3t0CjD0K5ixohQq0zYRUVL0Eg6s-c9i17XlEOrlmyCg';
const cid = '{"secret": "bAqZq4Wh+brYH3t4XvXM8oLo2BZNODhS0wvxzhGOxFrYpbCuQKovG07SOHqRiGZG0cTAoRkjvsfTO7SIURxVzQSnwCy1IMj3bYpjygcVdsFt5qpI4CH9imaKnScRQ72Mq/6FZ8ICmlGozlQZdQc9yA9es6DVS48dXf1+x95uSKPourY5IQcrcBmFRFVobi3nuh1jSQARGq71XWH551x1FmIDVf7J+FNDxsVncS9YkKVkVx+tsL7PhXA5wJBAxkEOLFukqLddU+3RDLMxZAZMv1QJIJKmT12VHbYYjVJjGmcoxrgKM0JtGQOLNMkPw/lHKAKQ47bWRHQqZ32chE9ydLobdOPOITYqvE1X0TpBZDn+3v9Ap2pNWvyJmv1Ea0kYZhv8hHy11RjJdcQ3XWD7HqgP+HGzcAUywOs99uWC7JyzcBM6LypxXvRmclxecNq483p4PbUt1EqDyr9tTSzcbBw1vdnNT8hvYXzV3/RAT9rEU87qZ873iwiD0GF7top2nVSThjezWAKLlt9/bARP2fK+n8nkDf3MPJW8fVMvCNmNHBLdoZCMpQ1IQkHyv0kgaszXqn8DTusiGT+t0diaPvZ29/TZljfOJPUKlBM+Kc+9bs8VNMNnQWKgxzgHPHw6uGe8CdLFcl5hxRAqyS0GX9VFDon8pSEAX8+62v50PdQ=", "version": 1}';
const discharge = 'MDAyNmxvY2F0aW9uIGxvZ2luLnN0YWdpbmcudWJ1bnR1LmNvbQowMmQ4aWRlbnRpZmllciB7InNlY3JldCI6ICJiQXFacTRXaCticllIM3Q0WHZYTThvTG8yQlpOT0RoUzB3dnh6aEdPeEZyWXBiQ3VRS292RzA3U09IcVJpR1pHMGNUQW9Sa2p2c2ZUTzdTSVVSeFZ6UVNud0N5MUlNajNiWXBqeWdjVmRzRnQ1cXBJNENIOWltYUtuU2NSUTcyTXEvNkZaOElDbWxHb3psUVpkUWM5eUE5ZXM2RFZTNDhkWGYxK3g5NXVTS1BvdXJZNUlRY3JjQm1GUkZWb2JpM251aDFqU1FBUkdxNzFYV0g1NTF4MUZtSURWZjdKK0ZORHhzVm5jUzlZa0tWa1Z4K3RzTDdQaFhBNXdKQkF4a0VPTEZ1a3FMZGRVKzNSRExNeFpBWk12MVFKSUpLbVQxMlZIYllZalZKakdtY294cmdLTTBKdEdRT0xOTWtQdy9sSEtBS1E0N2JXUkhRcVozMmNoRTl5ZExvYmRPUE9JVFlxdkUxWDBUcEJaRG4rM3Y5QXAycE5XdnlKbXYxRWEwa1laaHY4aEh5MTFSakpkY1EzWFdEN0hxZ1ArSEd6Y0FVeXdPczk5dVdDN0p5emNCTTZMeXB4WHZSbWNseGVjTnE0ODNwNFBiVXQxRXFEeXI5dFRTemNiQncxdmRuTlQ4aHZZWHpWMy9SQVQ5ckVVODdxWjg3M2l3aUQwR0Y3dG9wMm5WU1RoamV6V0FLTGx0OS9iQVJQMmZLK244bmtEZjNNUEpXOGZWTXZDTm1OSEJMZG9aQ01wUTFJUWtIeXYwa2dhc3pYcW44RFR1c2lHVCt0MGRpYVB2WjI5L1RabGpmT0pQVUtsQk0rS2MrOWJzOFZOTU5uUVdLZ3h6Z0hQSHc2dUdlOENkTEZjbDVoeFJBcXlTMEdYOVZGRG9uOHBTRUFYOCs2MnY1MFBkUT0iLCAidmVyc2lvbiI6IDF9CjAwZTZjaWQgbG9naW4uc3RhZ2luZy51YnVudHUuY29tfGFjY291bnR8ZXlKMWMyVnlibUZ0WlNJNklDSkNkRGRrY2pOeklpd2dJbTl3Wlc1cFpDSTZJQ0pDZERka2NqTnpJaXdnSW1ScGMzQnNZWGx1WVcxbElqb2dJbE4wWlhCb1pXNGdVM1JsZDJGeWRDSXNJQ0psYldGcGJDSTZJQ0p6ZEdWd2FHVnVMbk4wWlhkaGNuUkFZMkZ1YjI1cFkyRnNMbU52YlNJc0lDSnBjMTkyWlhKcFptbGxaQ0k2SUhSeWRXVjkKMDA0OGNpZCBsb2dpbi5zdGFnaW5nLnVidW50dS5jb218dmFsaWRfc2luY2V8MjAxNi0wOS0wNlQxMjozMzo0Ny45Mjc0NzgKMDA0NmNpZCBsb2dpbi5zdGFnaW5nLnVidW50dS5jb218bGFzdF9hdXRofDIwMTYtMDktMDZUMTI6MzM6NDcuOTI3NDc4CjAwNDRjaWQgbG9naW4uc3RhZ2luZy51YnVudHUuY29tfGV4cGlyZXN8MjAxNy0wOS0wNlQxMjozMzo0Ny45Mjc1MjMKMDAyZnNpZ25hdHVyZSBKTLqJt4bnlV3L6If5cf5mXjV6aKoj8Hc1ckI7pMkHFgo';
const boundDischarge = 'MDAyNmxvY2F0aW9uIGxvZ2luLnN0YWdpbmcudWJ1bnR1LmNvbQowMmQ4aWRlbnRpZmllciB7InNlY3JldCI6ICJiQXFacTRXaCticllIM3Q0WHZYTThvTG8yQlpOT0RoUzB3dnh6aEdPeEZyWXBiQ3VRS292RzA3U09IcVJpR1pHMGNUQW9Sa2p2c2ZUTzdTSVVSeFZ6UVNud0N5MUlNajNiWXBqeWdjVmRzRnQ1cXBJNENIOWltYUtuU2NSUTcyTXEvNkZaOElDbWxHb3psUVpkUWM5eUE5ZXM2RFZTNDhkWGYxK3g5NXVTS1BvdXJZNUlRY3JjQm1GUkZWb2JpM251aDFqU1FBUkdxNzFYV0g1NTF4MUZtSURWZjdKK0ZORHhzVm5jUzlZa0tWa1Z4K3RzTDdQaFhBNXdKQkF4a0VPTEZ1a3FMZGRVKzNSRExNeFpBWk12MVFKSUpLbVQxMlZIYllZalZKakdtY294cmdLTTBKdEdRT0xOTWtQdy9sSEtBS1E0N2JXUkhRcVozMmNoRTl5ZExvYmRPUE9JVFlxdkUxWDBUcEJaRG4rM3Y5QXAycE5XdnlKbXYxRWEwa1laaHY4aEh5MTFSakpkY1EzWFdEN0hxZ1ArSEd6Y0FVeXdPczk5dVdDN0p5emNCTTZMeXB4WHZSbWNseGVjTnE0ODNwNFBiVXQxRXFEeXI5dFRTemNiQncxdmRuTlQ4aHZZWHpWMy9SQVQ5ckVVODdxWjg3M2l3aUQwR0Y3dG9wMm5WU1RoamV6V0FLTGx0OS9iQVJQMmZLK244bmtEZjNNUEpXOGZWTXZDTm1OSEJMZG9aQ01wUTFJUWtIeXYwa2dhc3pYcW44RFR1c2lHVCt0MGRpYVB2WjI5L1RabGpmT0pQVUtsQk0rS2MrOWJzOFZOTU5uUVdLZ3h6Z0hQSHc2dUdlOENkTEZjbDVoeFJBcXlTMEdYOVZGRG9uOHBTRUFYOCs2MnY1MFBkUT0iLCAidmVyc2lvbiI6IDF9CjAwZTZjaWQgbG9naW4uc3RhZ2luZy51YnVudHUuY29tfGFjY291bnR8ZXlKMWMyVnlibUZ0WlNJNklDSkNkRGRrY2pOeklpd2dJbTl3Wlc1cFpDSTZJQ0pDZERka2NqTnpJaXdnSW1ScGMzQnNZWGx1WVcxbElqb2dJbE4wWlhCb1pXNGdVM1JsZDJGeWRDSXNJQ0psYldGcGJDSTZJQ0p6ZEdWd2FHVnVMbk4wWlhkaGNuUkFZMkZ1YjI1cFkyRnNMbU52YlNJc0lDSnBjMTkyWlhKcFptbGxaQ0k2SUhSeWRXVjkKMDA0OGNpZCBsb2dpbi5zdGFnaW5nLnVidW50dS5jb218dmFsaWRfc2luY2V8MjAxNi0wOS0wNlQxMjozMzo0Ny45Mjc0NzgKMDA0NmNpZCBsb2dpbi5zdGFnaW5nLnVidW50dS5jb218bGFzdF9hdXRofDIwMTYtMDktMDZUMTI6MzM6NDcuOTI3NDc4CjAwNDRjaWQgbG9naW4uc3RhZ2luZy51YnVudHUuY29tfGV4cGlyZXN8MjAxNy0wOS0wNlQxMjozMzo0Ny45Mjc1MjMKMDAyZnNpZ25hdHVyZSCrDlSlY03pF8RQ3p7vGqI7rYKGZq-6NECtwAEbLqAr3go';

describe('extractCaveatId', () => {
  it('should extract the correct caveat id', () => {
    expect(extractCaveatId(macaroon)).toEqual(cid);
  });
  it('should throw when given a bad macaroon', () => {
    expect(() => {
      extractCaveatId('foo');
    }).toThrow(/Couldn't deserialize macaroon/);
  });
});

describe('formatMacaroonAuthHeader', () => {
  it('should formate the correct auth header string', () => {
    expect(formatMacaroonAuthHeader(macaroon, discharge)).toEqual(`macaroon root="${macaroon}", discharge="${boundDischarge}"`);
  });
  it('should throw if cannot deserialize root macaroon', () => {
    expect(() => {
      formatMacaroonAuthHeader('foo', discharge);
    }).toThrow(/Couldn't deserialize macaroon/);
  });
  it('should throw if cannot deserialize discharge macaroon', () => {
    expect(() => {
      formatMacaroonAuthHeader(macaroon, 'bar');
    }).toThrow(/Couldn't deserialize macaroon/);
  });
});
